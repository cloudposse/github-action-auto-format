---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name: GitHub Action Auto-Format

# License of this project
license: "APACHE2"

# Copyrights
copyrights:
  - name: "Cloud Posse, LLC"
    url: "https://cloudposse.com"
    year: "2022"

# Canonical GitHub repo
github_repo: cloudposse/github-action-auto-format

# Badges to display
badges:
  - name: "Build Status"
    image: "https://github.com/cloudposse/build-harness/workflows/docker/badge.svg?branch=master"
    url: "https://github.com/cloudposse/build-harness/actions?query=workflow%3Adocker"
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/cloudposse/build-harness.svg"
    url: "https://github.com/cloudposse/build-harness/releases/latest"
  - name: "Slack Community"
    image: "https://slack.cloudposse.com/badge.svg"
    url: "https://slack.cloudposse.com"

related:
  - name: "GitHub Action Auto-Release"
    description: "Automatically draft release notes for a new release when merges are made into the default branch"
    url: "https://github.com/cloudposse/github-action-auto-release"
  - name: "GitHub Action Terraform Auto-context"
    description: "Automatically update `context.tf` whenever a new version becomes available"
    url: "https://github.com/cloudposse/github-action-terraform-auto-context"
  - name: "GitHub Action Terraform CI"
    description: "Full suite of Terraform CI actions, along with chatops support"
    url: "https://github.com/cloudposse/github-action-terraform-ci"
  - name: "GitHub Action Validate CODEOWNERS"
    description: "Validate and lint contents of CODEOWNERS file"
    url: "https://github.com/cloudposse/github-action-validate-codeowners"

# References
references:
  - name: "GitHub Action - Checkout"
    description: 'Checks out a repository under $GITHUB_WORKSPACE, so a workflow can access it'
    url: "https://github.com/actions/checkout"
  - name: "Create Pull Request"
    description: 'Take all unpushed commits and modifications to the code and put it on a new branch with a PR already made'
    url: "https://github.com/peter-evans/create-pull-request"

# Short description of this project
description: |-
  Github Action Auto-Format runs several repository "hygiene" tasks for repositories:
  - The `readme` target will rebuild `README.md` from `README.yaml`.
  - The `github_format` target adds all of Cloud Posse's standard repository housekeeping files (including GitHub Actions workflows) to the repository's `.github` folder.
  - The `terraform_format` target ensures consistent formatting across all Terraform files in the repository.

# How to use this project
usage: |-
  If you haven't already, follow the steps in the [quickstart](#quickstart) section.
  To choose which pieces of functionality will be executed, modify the `script-names:` input to the `cloudposse/github-action-auto-format` step to be a comma-separated list of one or more targets (e.g., `script-names: readme,terraform_format,github_format`).
  This is an exhaustive list of all valid `script-name`s:
    - `readme`
    - `github_format`
    - `terraform_format`
  If you're using the `auto-format.yml` workflow file distributed within this repository, then the Auto-format GitHub Action will trigger on pull request events, once a day at 7am UTC, and upon manual triggering via the `workflow_dispatch` mechanism.

# Example usage
examples: |-
  Here's a real world example:
  - [`github-action-auto-format`](https://github.com/cloudposse/github-action-auto-format/.github/workflows/auto-format.yml) - Cloud Posse's self-testing Auto-Format GitHub Action

# How to get started quickly
quickstart: |-
  Here's how to get started...
  1. Copy `.github/workflows/auto-format.yml` to the corresponding folder in your target repo.
  2. Generate a Personal Access Token (PAT) that with the `workflow` permission *using a GitHub account that has  `write` permissions in the target repo* by following the directions [here](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token) and selecting the `workflow` tick box on the token creation screen.
  3. Add this token as a GitHub secret in your target repository and set the `workflow-token` input of the `github-action-auto-format` step to the name of your secret.
  4. Set the `bot-name` input of the `github-action-auto-format` step to the GitHub username of the user who generated the token in step 2. *This user must have `write` permissions in the target repo.`
  5. By default, the Auto-Format GitHub Action will execute all of its scripts when run. If you'd like to use a subset of the full functionality, modify the `script-names` input of the `github-action-auto-format` step as described in the [usage](#usage) section.
  6. (Optional) You may want to change when the scheduled cron trigger is executed. If you'd like a guide, here's a useful resource for help in crafting cron strings - https://crontab.guru/
  7. (Optional) CloudPosse recommends pinning to specific versions of actions for ease of long-term maintenance. If you care to edit the pin in `auto-format.yml` from `main` to a specific version, feel free to consult https://github.com/cloudposse/github-action-auto-format/releases for a list of available versions.

# Contributors to this project
contributors:
  - name: "Dylan Bannon"
    github: "dylanbannon"
